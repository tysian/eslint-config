module.exports = {
  env: {
    es6: true,
    browser: true,
    node: true,
  },
  reportUnusedDisableDirectives: true,
  plugins: [
    'import',
    'n',
    'promise',
    'html',
    'unicorn',
    'unused-imports'
  ],
  settings: {
    'import/resolver': {
      node: { extensions: ['.js', '.jsx', '.mjs'] },
    },
  },
  overrides: [
    {
      // Code blocks in markdown file
      files: ['**/*.md/*.*'],
      rules: {
        '@typescript-eslint/no-redeclare': 'off',
        '@typescript-eslint/no-unused-vars': 'off',
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/comma-dangle': 'off',
        '@typescript-eslint/consistent-type-imports': 'off',
        '@typescript-eslint/no-namespace': 'off',
        '@typescript-eslint/no-require-imports': 'off',
        'import/no-unresolved': 'off',
        'unused-imports/no-unused-imports': 'off',
        'unused-imports/no-unused-vars': 'off',
        'no-alert': 'off',
        'no-console': 'off',
        'no-restricted-imports': 'off',
        'no-undef': 'off',
        'no-unused-expressions': 'off',
        'no-unused-vars': 'off',
      },
    },
  ],
  extends: [
    'plugin:import/recommended',
    'plugin:eslint-comments/recommended',
    'plugin:no-template-curly-in-string-fix/recommended'
  ],
  ignorePatterns: [
    '**/node_modules',
    '**/dist',
    '**/package-lock.json',
    '**/yarn.lock',
    '**/pnpm-lock.yaml',
    '**/bun.lockb',

    '**/dist',
    '**/build',
    '**/output',
    '**/coverage',
    '**/temp',
    '**/.vitepress/cache',
    '**/.nuxt',
    '**/.next',
    '**/.vercel',
    '**/.changeset',
    '**/.idea',
    '**/.cache',
    '**/.output',
    '**/.vite-inspect',

    '**/CHANGELOG*.md',
    '**/*.min.*',
    '**/LICENSE*',
    '**/__snapshots__',
    '**/auto-import?(s).d.ts',
    '**/components.d.ts',
  ],
  rules: {
    'accessor-pairs': 'off',
    'array-bracket-newline': ['off', 'consistent'],
    'array-bracket-spacing': ['error', 'never'],
    'array-callback-return': 'error',
    'array-element-newline': ['off', { multiline: true, minItems: 3 }],
    'arrow-body-style': ['error', 'as-needed', { requireReturnForObjectLiteral: false }],
    'arrow-parens': ['error', 'always'],
    'arrow-spacing': ['error', { before: true, after: true }],
    'block-scoped-var': 'error',
    'block-spacing': ['error', 'always'],
    'brace-style': ['off', '1tbs', { allowSingleLine: true }],
    'callback-return': 'off',
    'camelcase': ['error', { allow: ['^UNSAFE_'], properties: 'never', ignoreGlobals: true }],
    'comma-dangle': ['error', 'always-multiline'],
    'comma-spacing': ['off', { before: false, after: true }],
    'complexity': ['off', 20],
    'consistent-return': 'off',
    'consistent-this': 'off',
    'curly': ['error', 'multi-line'],
    'default-case': ['error', { commentPattern: '^no default$' }],
    'default-case-last': 'error',
    'default-param-last': 'off',
    'dot-location': ['error', 'property'],
    'dot-notation': ['error', { allowKeywords: true }],
    'eol-last': 'error',
    'eqeqeq': ['error', 'smart'],
    'eslint-comments/disable-enable-pair': 'off',
    'func-call-spacing': ['off', 'never'],
    'func-name-matching': ['off', 'always', { includeCommonJSModuleExports: false, considerPropertyDescriptor: true }],
    'func-names': ['off'],
    'func-style': ['off', 'expression'],
    'function-call-argument-newline': ['error', 'consistent'],
    'function-paren-newline': ['error', 'multiline-arguments'],
    'generator-star': 'off',
    'getter-return': ['error', { allowImplicit: true }],
    'global-require': 'error',
    'grouped-accessor-pairs': 'error',
    'guard-for-in': 'error',
    'handle-callback-err': 'off',
    'id-denylist': 'off',
    'id-length': 'off',
    'id-match': 'off',
    'implicit-arrow-linebreak': ['error', 'beside'],
    'import/consistent-type-specifier-style': ['error', 'prefer-inline'],
    'import/default': 'off',
    'import/dynamic-import-chunkname': ['off', { importFunctions: [], webpackChunknameFormat: '[0-9a-zA-Z-_/.]+' }],
    'import/export': 'error',
    'import/exports-last': 'off',
    "import/extensions": ["error","ignorePackages",{js: "never",jsx: "never",ts: "never",tsx: "never"}],
    'import/first': 'error',
    'import/group-exports': 'off',
    'import/imports-first': 'off',
    'import/max-dependencies': ['off', { max: 10 }],
    'import/named': 'error',
    'import/namespace': 'off',
    'import/newline-after-import': 'error',
    'import/no-absolute-path': 'error',
    'import/no-cycle': ['error', { maxDepth: 'âˆž', ignoreExternal: false }],
    'import/no-default-export': 'off',
    'import/no-deprecated': 'off',
    'import/no-duplicates': 'error',
    'import/no-dynamic-require': 'error',
    'import/no-extraneous-dependencies': ['error', { packageDir: './' }],
    'import/no-import-module-exports': ['error', { exceptions: [] }],
    'import/no-internal-modules': ['off', { allow: [] }],
    'import/no-mutable-exports': 'error',
    'import/no-named-as-default': 'off',
    'import/no-named-as-default-member': 'off',
    'import/no-named-default': 'error',
    'import/no-named-export': 'off',
    'import/no-namespace': 'off',
    'import/no-nodejs-modules': 'off',
    'import/no-relative-packages': 'error',
    'import/no-relative-parent-imports': 'off',
    'import/no-restricted-paths': 'off',
    'import/no-self-import': 'error',
    'import/no-unassigned-import': 'off',
    'import/no-unresolved': ['error', { commonjs: true, caseSensitive: true, caseSensitiveStrict: false }],
    'import/no-unused-modules': ['off', { ignoreExports: [], missingExports: true, unusedExports: true }],
    'import/no-useless-path-segments': ['error', { noUselessIndex: true }],
    'import/no-webpack-loader-syntax': 'error',
    'import/order': ['error',{groups: ['builtin', 'external', 'internal', 'parent', 'sibling', 'index'],pathGroups: [{pattern: '$/**',group: 'internal',},],},],
    'import/prefer-default-export': 'off',
    'import/unambiguous': 'off',
    'indent-legacy': 'off',
    'init-declarations': 'off',
    'key-spacing': ['error', { beforeColon: false, afterColon: true }],
    'keyword-spacing': ['error',{before: true,after: true,overrides: {return: { after: true },throw: { after: true },case: { after: true },},},],
    'line-comment-position': ['off', { position: 'above', ignorePattern: '', applyDefaultPatterns: true }],
    'linebreak-style': ['off', 'unix'],
    'lines-around-comment': 'off',
    'lines-around-directive': ['error', { before: 'always', after: 'always' }],
    'lines-between-class-members': ['off', 'always', { exceptAfterSingleLine: false }],
    'max-nested-callbacks': 'off',
    'max-statements': ['off', 10],
    'max-statements-per-line': ['error', { max: 1 }],
    'multiline-comment-style': ['off', 'starred-block'],
    'multiline-ternary': ['off', 'never'],
    'n/handle-callback-err': ['error', '^(err|error)$'],
    'n/no-callback-literal': 'off',
    'n/no-deprecated-api': 'error',
    'n/no-exports-assign': 'error',
    'n/no-new-require': 'error',
    'n/no-path-concat': 'error',
    'n/prefer-global/buffer': ['error', 'never'],
    'n/process-exit-as-throw': 'error',
    'new-cap': ['error',{newIsCap: true,newIsCapExceptions: [],capIsNew: false,capIsNewExceptions: ['Immutable.Map', 'Immutable.Set', 'Immutable.List'],properties: true,},],
    'new-parens': 'error',
    'newline-after-var': 'off',
    'newline-before-return': 'off',
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 4 }],
    'no-alert': 'warn',
    'no-array-constructor': 'off',
    'no-arrow-condition': 'off',
    'no-async-promise-executor': 'error',
    'no-await-in-loop': 'off',
    'no-bitwise': 'error',
    'no-buffer-constructor': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-catch-shadow': 'off',
    'no-class-assign': 'error',
    'no-comma-dangle': 'off',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': 'error',
    'no-confusing-arrow': ['error', { allowParens: true, onlyOneSimpleParam: false }],
    'no-console': 'off',
    'no-const-assign': 'error',
    'no-constructor-return': 'off',
    'no-continue': 'off',
    'no-control-regex': 'error',
    'no-debugger': 'off',
    'no-delete-var': 'off',
    'no-div-regex': 'off',
    'no-dupe-args': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'off',
    'no-duplicate-imports': 'off',
    'no-else-return': ['error', { allowElseIf: false }],
    'no-empty': ['error', { allowEmptyCatch: true }],
    'no-empty-character-class': 'error',
    'no-empty-function': ['off', { allow: ['arrowFunctions', 'functions', 'methods'] }],
    'no-empty-pattern': 'error',
    'no-eq-null': 'off',
    'no-eval': 'error',
    'no-ex-assign': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-extra-boolean-cast': 'error',
    'no-extra-label': 'error',
    'no-extra-parens': ['off','all',{conditionalAssign: true,nestedBinaryExpressions: false,returnAssign: false,ignoreJSX: 'all',enforceForArrowConditionals: false,},],
    'no-extra-semi': 'off',
    'no-fallthrough': 'error',
    'no-floating-decimal': 'off',
    'no-func-assign': 'error',
    'no-global-assign': 'error',
    'no-implicit-coercion': ['off', { boolean: false, number: true, string: true, allow: [] }],
    'no-implicit-globals': 'off',
    'no-implied-eval': 'error',
    'no-import-assign': 'error',
    'no-inline-comments': 'off',
    'no-inner-declarations': 'error',
    'no-invalid-regexp': 'error',
    'no-invalid-this': 'error',
    'no-irregular-whitespace': 'error',
    'no-iterator': 'error',
    'no-label-var': 'error',
    'no-labels': ['error', { allowLoop: false, allowSwitch: false }],
    'no-lone-blocks': 'error',
    'no-lonely-if': 'error',
    'no-loop-func': 'off',
    'no-loss-of-precision': 'error',
    'no-magic-numbers': ['off',{ignore: [],ignoreArrayIndexes: true,enforceConst: true,detectObjects: false,},],
    'no-misleading-character-class': 'error',
    'no-mixed-operators': ['error',{groups: [['%', '**'],['%', '+'],['%', '-'],['%', '*'],['%', '/'],['/', '*'],['&', '|', '<<', '>>', '>>>'],['==', '!=', '===', '!==', '>', '>=', '<', '<='],['&&', '||', '?:'], ['in', 'instanceof'],],allowSamePrecedence: false,},],
    'no-mixed-requires': ['off', false],
    'no-mixed-spaces-and-tabs': 'error',
    'no-multi-assign': 'error',
    'no-multi-spaces': ['error', { ignoreEOLComments: false }],
    'no-multi-str': 'error',
    'no-multiple-empty-lines': ['error', { max: 1, maxBOF: 0, maxEOF: 0 }],
    'no-native-reassign': 'off',
    'no-negated-condition': 'off',
    'no-negated-in-lhs': 'off',
    'no-nested-ternary': 'error',
    'no-new': 'off',
    'no-new-func': 'off',
    'no-new-object': 'error',
    'no-new-require': 'error',
    'no-new-symbol': 'error',
    'no-new-wrappers': 'error',
    'no-nonoctal-decimal-escape': 'error',
    'no-obj-calls': 'error',
    'no-octal': 'error',
    'no-octal-escape': 'error',
    'no-param-reassign': ['error',{props: true,ignorePropertyModificationsFor: ['acc', 'accumulator', 'e', 'ctx', 'context', 'req', 'request', 'res', 'response', '$scope', 'staticContext'],},],
    'no-path-concat': 'error',
    'no-plusplus': 'error',
    'no-process-env': 'off',
    'no-process-exit': 'off',
    'no-promise-executor-return': 'error',
    'no-proto': 'error',
    'no-prototype-builtins': 'error',
    'no-redeclare': ['error', { builtinGlobals: false }],
    'no-regex-spaces': 'error',
    'no-reserved-keys': 'off',
    'no-restricted-exports': ['error', { restrictedNamedExports: ['default', 'then'] }],
    'no-restricted-globals': ['error',{name: 'isFinite',message: 'Use Number.isFinite instead',},{name: 'isNaN',message: 'Use Number.isNaN instead',},'addEventListener','blur','close','closed','confirm','defaultStatus','defaultstatus','event','external','find','focus','frameElement','frames','history','innerHeight','innerWidth','length','location','locationbar','menubar','moveBy','moveTo','name','onblur','onerror','onfocus','onload','onresize','onunload','open','opener','opera','outerHeight','outerWidth','pageXOffset','pageYOffset','parent','print','removeEventListener','resizeBy','resizeTo','screen','screenLeft','screenTop','screenX','screenY','scroll','scrollbars','scrollBy','scrollTo','scrollX','scrollY','self','status','statusbar','stop','toolbar','top',],
    'no-restricted-imports': 'off',
    'no-restricted-modules': 'off',
    'no-restricted-properties': ['error',{object: 'arguments',property: 'callee',message: 'arguments.callee is deprecated',},{object: 'global',property: 'isFinite',message: 'Please use Number.isFinite instead',},{object: 'self',property: 'isFinite',message: 'Please use Number.isFinite instead',},{object: 'window',property: 'isFinite',message: 'Please use Number.isFinite instead',},{object: 'global',property: 'isNaN',message: 'Please use Number.isNaN instead',},{object: 'self',property: 'isNaN',message: 'Please use Number.isNaN instead',},{object: 'window',property: 'isNaN',message: 'Please use Number.isNaN instead',},{property: '__defineGetter__',message: 'Please use Object.defineProperty instead.',},{property: '__defineSetter__',message: 'Please use Object.defineProperty instead.',},{object: 'Math',property: 'pow',message: 'Use the exponentiation operator (**) instead.',},],
    'no-restricted-syntax': ['error',{selector: 'ForInStatement',message: 'for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.',},{selector: 'LabeledStatement',message: 'Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.',},{selector: 'WithStatement',message: '`with` is disallowed in strict mode because it makes code impossible to predict and optimize.',},],
    'no-return-assign': ['error', 'always'],
    'no-return-await': 'off',
    'no-script-url': 'error',
    'no-self-assign': ['error', { props: true }],
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-setter-return': 'error',
    'no-shadow': 'off',
    'no-shadow-restricted-names': 'error',
    'no-space-before-semi': 'off',
    'no-spaced-func': 'error',
    'no-sparse-arrays': 'error',
    'no-sync': 'off',
    'no-tabs': 'error',
    'no-template-curly-in-string': 'error',
    'no-ternary': 'off',
    'no-this-before-super': 'error',
    'no-throw-literal': 'error',
    'no-trailing-spaces': 'error',
    'no-undef': 'error',
    'no-undef-init': 'error',
    'no-undefined': 'off',
    'no-underscore-dangle': ['error',{allow: ['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'],allowAfterThis: false,allowAfterSuper: false,enforceInMethodNames: true,allowAfterThisConstructor: false,allowFunctionParams: true,enforceInClassFields: false,},],
    'no-unexpected-multiline': 'error',
    'no-unmodified-loop-condition': 'off',
    'no-unneeded-ternary': ['error', { defaultAssignment: false }],
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unsafe-optional-chaining': ['error', { disallowArithmeticOperators: true }],
    'no-unused-expressions': ['error',{allowShortCircuit: true,allowTernary: true,allowTaggedTemplates: true,},],
    'no-unused-labels': 'error',
    'no-unused-private-class-members': 'off',
    'no-unused-vars': "off", // handled by unused-imports
    'no-use-before-define': ['error', { functions: false, classes: false, variables: true }],
    'no-useless-backreference': 'error',
    'no-useless-call': 'off',
    'no-useless-catch': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'error',
    'no-useless-constructor': 'off',
    'no-useless-escape': 'off',
    'no-useless-rename': ['error', { ignoreDestructuring: false, ignoreImport: false, ignoreExport: false }],
    'no-useless-return': 'error',
    'no-var': 'error',
    'no-void': 'error',
    'no-warning-comments': ['off', { terms: ['todo', 'fixme', 'xxx'], location: 'start' }],
    'no-whitespace-before-property': 'error',
    'no-with': 'error',
    'no-wrap-func': 'off',
    'nonblock-statement-body-position': 'off',
    'object-curly-newline': ['error', { multiline: true, consistent: true }],
    'object-curly-spacing': ['error', 'always'],
    'object-property-newline': ['error', { allowAllPropertiesOnSameLine: true }],
    'object-shorthand': ['error', 'always', { ignoreConstructors: false, avoidQuotes: true }],
    'one-var-declaration-per-line': ['error', 'always'],
    'operator-assignment': ['error', 'always'],
    'operator-linebreak': ['error', 'after', { overrides: { '?': 'before', ':': 'before', '|>': 'before' } }],
    'padded-blocks': ['error', "never", { allowSingleLineBlocks: true }],
    'padding-line-between-statements': 'off',
    'prefer-arrow-callback': ['error', { allowNamedFunctions: false, allowUnboundThis: true }],
    'prefer-const': ['error',{destructuring: 'all',ignoreReadBeforeAssign: true,},],
    'prefer-destructuring': ['error',{VariableDeclarator: { array: false, object: true },AssignmentExpression: { array: true, object: false },},{ enforceForRenamedProperties: false },],
    'prefer-exponentiation-operator': 'error',
    'prefer-named-capture-group': 'off',
    'prefer-numeric-literals': 'error',
    'prefer-object-spread': 'error',
    'prefer-promise-reject-errors': 'off',
    'prefer-reflect': 'off',
    'prefer-regex-literals': ['error', { disallowRedundantWrapping: true }],
    'prefer-rest-params': 'error',
    'prefer-spread': 'error',
    'prefer-template': 'error',
    'promise/param-names': 'error',
    'quote-props': ['error', 'as-needed'],
    'quotes': ['error', 'single', { avoidEscape: true, allowTemplateLiterals: true }],
    'radix': ['error', 'as-needed'],
    'require-atomic-updates': 'off',
    'require-await': 'error',
    'require-jsdoc': 'off',
    'require-unicode-regexp': 'off',
    'require-yield': 'error',
    'rest-spread-spacing': ['error', 'never'],
    'semi': ['error'],
    'semi-spacing': ['error', { before: false, after: true }],
    'semi-style': ['error', 'last'],
    'sort-keys': ['off', 'asc', { caseSensitive: false, natural: true }],
    'sort-vars': 'off',
    'space-after-function-name': 'off',
    'space-after-keywords': 'off',
    'space-before-blocks': ['error', 'always'],
    'space-before-function-paren': ['error',{anonymous: 'always',named: 'never',asyncArrow: 'always',},],
    'space-before-function-parentheses': 'off',
    'space-before-keywords': 'off',
    'space-in-brackets': 'off',
    'space-in-parens': ['error', 'never'],
    'space-infix-ops': 'error',
    'space-return-throw-case': 'off',
    'space-unary-ops': ['error', { words: true, nonwords: false }],
    'space-unary-word-ops': 'off',
    'spaced-comment': ['error','always',{line: {markers: ['/'],exceptions: ['/', '#'],},block: {markers: ['!'],exceptions: ['*'],balanced: true,},},],
    'switch-colon-spacing': ['error', { after: true, before: false }],
    'symbol-description': 'error',
    'template-curly-spacing': ['error', 'never'],
    'template-tag-spacing': ['error', 'never'],
    'unicode-bom': ['error', 'never'],
    'unicorn/empty-brace-spaces': 'off', // allow spaces between braces
    'unicorn/error-message': 'error', // Pass error message when throwing errors
    'unicorn/escape-case': 'error', // Uppercase regex escapes
    'unicorn/no-instanceof-array': 'error', // Array.isArray instead of instanceof
    'unicorn/no-new-buffer': 'error', // Prevent deprecated `new Buffer()`
    'unicorn/no-unsafe-regex': 'off', // Keep regex literals safe!
    'unicorn/number-literal-case': 'error', // Lowercase number formatting for octal, hex, binary (0x1'error' instead of 0X1'error')
    'unicorn/prefer-includes': 'error', // includes over indexOf when checking for existence
    'unicorn/prefer-node-protocol': 'error', // Prefer using the node: protocol
    'unicorn/prefer-string-starts-ends-with': 'error', // String methods startsWith/endsWith instead of more complicated stuff
    'unicorn/prefer-text-content': 'error', // textContent instead of innerText
    'unicorn/prefer-type-error': 'error', // Enforce throwing type error when throwing error while checking typeof
    'unicorn/throw-new-error': 'error', // Use new when throwing error
    'unused-imports/no-unused-imports': 'off',
    'unused-imports/no-unused-vars': ['warn',{vars: 'all',varsIgnorePattern: '^_',args: 'after-used',argsIgnorePattern: '^_',},],
    'valid-jsdoc': 'off',
    'valid-typeof': ['error', { requireStringLiterals: true }],
    'vars-on-top': 'off',
    'wrap-iife': ['error', 'outside', { functionPrototypeMethods: false }],
    'wrap-regex': 'off',
    'yoda': 'error',
  }
};
